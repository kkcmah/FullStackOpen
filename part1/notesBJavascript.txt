Mar 26, 2022
- use let and const
- arrays push, forEach function iteration
- react immutable paradigm ex. using concat instead of push
    - concat creates new array with content of old and new
    - arr2 = arr1.concat(5)
- map create new array with function used to create items
    - arr.map(value => "<li>" + value + "</li>")
- destructuring to assign items of array to variables
    - const [first, second, ...rest] = arr
- objects properties and values
    - const obj = {name: {first: "aa", last: "bb"}, grades: [1,2,3]}
    - values can be any type number, string, boolean, obj, array
    - reference properties using dot or brackets obj.field obj[fieldName]
    - can also create new property using dor or brackets
- functions
    - const myFunc = () => {console.log("here")}
- this keyword refers to the object itself
    - arrow functions and functions defined using function keyword behave different with 'this'
    - when calling method through reference the value of this becomes so called global object and behaves differently usually undefined
        - calling method in obj function that has ex.log this.name
        - can use bind to preserve 'this' setTimeout(arto.greet.bind(arto), 1000)
- classes
    - js classes simulated object orientated nature
    - Class Person {
        constructor(name, age) {
            this.name = name;
            this.age = age;
        }
        greet() {
            console.log("hi name=" + this.name)
        }
    }
    const adam = new Person("Adam aa", 30);